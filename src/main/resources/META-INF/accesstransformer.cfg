# Core
public net.minecraft.client.renderer.OutlineBufferSource$EntityOutlineGenerator

# Mesh caching
public net.minecraft.client.model.geom.ModelPart$Cube polygons
public net.minecraft.client.model.geom.ModelPart$Polygon
public net.minecraft.client.model.geom.ModelPart$Vertex

# For Texture based pre-render culling and gpu-based culling
public net.minecraft.client.renderer.RenderType$CompositeRenderType
public net.minecraft.client.renderer.RenderType$CompositeRenderType state

# Texture based pre-render culling
public net.minecraft.client.renderer.RenderType$CompositeState textureState
public net.minecraft.client.renderer.RenderStateShard$EmptyTextureStateShard cutoutTexture()Ljava/util/Optional;
public net.minecraft.client.renderer.RenderStateShard$TextureStateShard cutoutTexture()Ljava/util/Optional;
public net.minecraft.client.renderer.RenderStateShard$MultiTextureStateShard cutoutTexture()Ljava/util/Optional;

# GPU based culling
public net.minecraft.client.renderer.RenderType$CompositeState cullState
public net.minecraft.client.renderer.RenderStateShard$BooleanStateShard enabled

# Text Rendering
public net.minecraft.client.gui.font.glyphs.BakedGlyph u0
public net.minecraft.client.gui.font.glyphs.BakedGlyph u1
public net.minecraft.client.gui.font.glyphs.BakedGlyph v0
public net.minecraft.client.gui.font.glyphs.BakedGlyph v1
public net.minecraft.client.gui.font.glyphs.BakedGlyph left
public net.minecraft.client.gui.font.glyphs.BakedGlyph right
public net.minecraft.client.gui.font.glyphs.BakedGlyph up
public net.minecraft.client.gui.font.glyphs.BakedGlyph down

# Item Rendering
public net.minecraft.client.gui.GuiGraphics renderItem(Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;IIII)V